# This file holds default settings. In some cases the settings will be valid values and suitable
# for production, such as maximum upload size. In other cases, some settings will be nonsense
# values, such as access keys.
#
# Settings with a default given here can be assumed, in app code,
# to always be set. So `ENV.fetch` can be used and nils don't need to be handled.
#
# In cases where overriding a certain setting is essential for production servers, the
# config/initializers/config_check.rb file checks to make sure the placeholder values below
# are overridden.
#
# To override these defaults in development (e.g. for developing against an API with real credentials)
# use the .env.development.local file, which is git-ignored. To override these settings in production,
# use the .env.production.local file, also git-ignored.

##########################################################################################################
# REQUIRED VARIABLES FOR ALL SERVERS
# These must be set to real values in production in order for the system to work properly.
# They will work ok in development, but can be overridden if desired.

NEMO_SECRET_KEY_BASE=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# URL parameters so the server knows how to generate links to itself.
# We default to a port of 8443 in development because ODK Collect can connect to that port over http
# without complaining about security.
NEMO_URL_PROTOCOL=http
NEMO_URL_HOST=www.example.com
NEMO_URL_PORT=8443

##########################################################################################################
# REQUIRED VARIABLES FOR ONLINE SETUPS
# These must be set to real values in production unless OFFLINE_MODE is enabled.
# They will work ok in development, but can be overridden if desired.

# The email used as the 'From' address for all emails. Must be compatible with your sending service.
NEMO_SITE_EMAIL=nemo@example.com

# Comma separated list of addresses to which to send error reports.
NEMO_WEBMASTER_EMAILS=nemo-ops@example.com,nemo-support@example.com

# An SMTP server and port are minimally required for NEMO to be able to send email,
# which is an essential part of its functioning. In production, be sure to override at least the
# server address. In development, the project uses the letter_opener gem, so these settings are
# irrelevant.
NEMO_SMTP_ADDRESS=mail.example.com
NEMO_SMTP_PORT=587

# You can additionally provide the below settings as required. They are commented out below
# because you may not need them depending on your setup. They map to the settings in Rails' ActionMailer.
# See: https://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration
# NEMO_SMTP_DOMAIN=example.com
# NEMO_SMTP_AUTHENTICATION=login
# NEMO_SMTP_USER_NAME=yourusername
# NEMO_SMTP_PASSWORD=XXXXXXXXXXXXXXXX

# TODO: Document where to find it
# Recaptcha keys (not real values)
NEMO_RECAPTCHA_PUBLIC_KEY=6Lc6BAAAAAAAAChqRbQZcn_yyyyyyyyyyyyyyyyy
NEMO_RECAPTCHA_PRIVATE_KEY=6Lc6BAAAAAAAAKN3DRm6VA_xxxxxxxxxxxxxxxxx

# When overriding this value in .env.production.local, we recommend noting the API console project
# name and the Google accounts with access to it below.
# Google API Console project name: XXXXXXXXXXXXXXXXXX
# Google Accounts with access to project: XXXXXX@gmail.com, XXXXXX@gmail.com
NEMO_GOOGLE_MAPS_API_KEY=XXXXXXXXXXXXXXXX

##########################################################################################################
# OPTIONAL VARIABLES
# These can optionally be overidden in production but the system will work without them.

# Set to 'cloud' or 'amazon' to use cloud storage with Amazon AWS.
# Set to 'azure' to use cloud storage with Microsoft Azure
# Set to 'local' to store files locally.
NEMO_STORAGE_TYPE=local

# These are only required when using S3 storage.
NEMO_AWS_ACCESS_KEY_ID="XXXXXXXXXXXXXXXX"
NEMO_AWS_SECRET_ACCESS_KEY="XXXXXXXXXXXXXXXX"
NEMO_AWS_REGION="us-east-1"
NEMO_AWS_BUCKET="your-bucket-name"

# These are only required when using Azure storage.
NEMO_AZURE_STORAGE_ACCOUNT_NAME="youraccountname"
NEMO_AZURE_STORAGE_ACCESS_KEY="XXXXXXXXXXXXXXXX"
NEMO_AZURE_CONTAINER="your-container-name"

# Offline mode.
# If set to true, you can't reset passwords via email or send broadcasts.
# Email error reports are also not sent.
# This should be set to true if the server doesn't _always_ have an internet connection.
# For some functions, such as displaying the map, the system will still check for an internet connection.
# But if offline_mode is false, it won't perform this check for efficiency's sake.
NEMO_OFFLINE_MODE=false

# Max upload size in MiB (1 MiB = 2^20 bytes).
# This should match the client_max_body_size setting in nginx.conf, which is the ultimate authority.
NEMO_MAX_UPLOAD_SIZE_MIB=50

# Set this to any value to enable OData compatibility mode with Azure Data Factory.
# A missing feature in Data Factory prevents it from recognizing our resource URLs,
# and it also doesn't support arrays or objects (like select_multiple, cascading select, or groups).
NEMO_USE_DATA_FACTORY=

# Set this to any value to force OData to be generated fresh each time (ignore the cache).
NEMO_FORCE_FRESH_ODATA=

# For Scout monitoring (https://scoutapm.com)
NEMO_SCOUT_KEY=XXXXXXXXXXXXXXXX

# Theme variables for the default NEMO theme
NEMO_NEMO_THEME_SITE_NAME=NEMO

# Theme variables for the default ELMO theme
NEMO_ELMO_THEME_SITE_NAME=ELMO

# Missionless SMS allows submission of SMS without a mission in the URL. We then use the universal token
# to validate the request. Not required if missionless is not allowed.
# Generate token with: ruby -e "require 'securerandom'; puts SecureRandom.hex(16)"
NEMO_ALLOW_MISSIONLESS_SMS=false
NEMO_UNIVERSAL_SMS_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
