<% label_row = !!local_assigns[:label_row]; grid_mode = !!local_assigns[:grid_mode]; # Default values %>
<% group ||= nil %>
<%# Note that subquestions here refers to multiple levels of a cascading select question, not question grouping. %>
<% qing.subquestions.each do |subq| %>
  <% if group && group.repeats %>
    <group appearance="field-list">
      <input ref="<%= "/data/grp-#{group.try(:id)}/grp-header#{group.try(:id)}"%>">
        <hint ref="jr:itext('grp-header<%= group.try(:id) %>:hint')"/>
      </input>
  <% end %>
  <%= odk_input_tag(qing, subq, {appearance: appearance(grid_mode, label_row)}, group.try(:id)) do %>
    <% if label_row %>
      <label></label>
    <% else %>
      <label ref="jr:itext('<%= subq.odk_code %>:label')"/>
    <% end %>

    <% unless @style == 'commcare' || grid_mode %>
      <hint ref="jr:itext('<%= subq.odk_code %>:hint')"/>
    <% end %>

    <%# ODK wants the first-level options here for select questions, so we check if subq is first_rank. %>
    <%# Options from other levels go in itemsets.csv. %>
    <% if subq.has_options? && subq.first_rank? %>
      <% subq.option_set.children.each do |node| %>
        <item>
          <label ref="jr:itext('on<%= node.id %>')"/>
          <value>on<%= node.id %></value>
        </item>
      <% end %>
    <% end  %>
  <% end %>
  <% if group.try(:id) && group.repeats %>
    </group>
  <% end %>
<% end %>
